#!/usr/bin/env bash

d() {
  [ -n "$DEBUG" ]
}
debug() {
  d && echo "${@}" > /dev/stderr
}

unset tmpfile
unset template_name
atexit() {
  debug delete temporary
  [[ -n "${tmpfile-}" ]] && rm -f "$tmpfile"
}
trap atexit EXIT
trap 'trap - EXIT; atexit; exit -1' INT PIPE TERM

tmpfile="$(mktemp /tmp/cXXXXXX).c"
template_name=~/.c1template

if [ -f "$template_name" ]; then
  tpl=$(cat $template_name)
  debug read template
else
  tpl=$(cat <<DEFAULT_SOURCE_CODE
#include <stdio.h>
int main(int argc, char *argv[])
{
  \${@};
}
DEFAULT_SOURCE_CODE
)
  debug use default template
fi

debug template is...
debug "${tpl}"

tpld=$(cat <<OUTER
cat <<EOF
${tpl}
EOF
OUTER
)
eval "${tpld}" > $tmpfile

debug source code is...
d && cat $tmpfile > /dev/stderr

cc -o $tmpfile.o $tmpfile && $tmpfile.o

